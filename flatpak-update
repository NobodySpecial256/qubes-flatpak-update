#!/usr/bin/env python3
from subprocess import run
from copy import deepcopy
from string import printable
from sys import stderr

"""
flatpak-update
A Qubes tool for updating templates with Flatpak apps installed

This script is simple, it looks for templates with names containing the substring "-flatpak-", then runs `flatpak update` in them as root
"""

use_xterm=True
xterm_hold = False
capture_out=False
flatpak_assume_yes = False

def clean_str(string):
	ret = ""
	for char in string:
		if char in printable:
			ret += char
	return ret

def main():
	qubes_lines = run(["/usr/bin/qvm-ls"], capture_output=True).stdout.decode(encoding="ascii", errors="replace").split("\n")[1:]
	failed = []

	for line in qubes_lines:
		line_split = line.split()
		if line.strip() == "":
			continue
		qube = line_split[0]
		qube_type = line_split[2]

		if qube_type != "TemplateVM":
			continue
		if qube in ["dom0", ""]:
			continue
		if "-flatpak-" not in qube:
			continue

		print("\t- %s" %(qube))
		cmd="env http_proxy=http://127.0.0.1:8082 https_proxy=http://127.0.0.1:8082 flatpak update"
		if flatpak_assume_yes:
			cmd += " -y"
		if use_xterm:
			if xterm_hold:
				cmd="xterm -hold -e %s" %(cmd)
			else:
				cmd="xterm -e %s" %(cmd)
		if capture_out:
			try:
				res = run(["/usr/bin/qvm-run", "-u", "root", "--pass-io", qube, cmd], capture_output=True)
			except(Exception, KeyboardInterrupt):
				failed += [qube]
			else:
				log = clean_str(res.stdout.decode(encoding="ascii", errors="replace"))
				err = clean_str(res.stderr.decode(encoding="ascii", errors="replace"))
				print(log)
				print(err, file=stderr)
				if res.returncode != 0:
					failed += [qube]
		else:
			try:
				res = run(["/usr/bin/qvm-run", "-u", "root", qube, cmd])
			except(Exception, KeyboardInterrupt):
				failed += [qube]
			else:
				if res.returncode != 0:
					failed += [qube]
		run(["/usr/bin/qvm-shutdown", qube])
	print("Done.", end="\n")
#	if failed:
#		print("Failed to update:\n\t%s" %(', '.join(failed)))
#	else:
#		print("All qubes updated successfully.")
main()
